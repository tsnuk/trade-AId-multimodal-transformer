# =============================================================================
# EXAMPLE 2: ADVANCED MULTIMODAL INPUT SCHEMAS
# =============================================================================
# This configuration demonstrates advanced multimodal features:
# - Multiple data files combined into single modalities
# - Complex multi-step processing pipelines
# - Strategic cross-attention patterns
# - Data augmentation with randomness injection
#
# Modalities demonstrated:
# 1. Combined Stock Prices (multiple files, complex processing)
# 2. Volatility Indicators (percentage changes with sophisticated binning)
# 3. Volume Patterns (trading volume with scaling and binning)
# 4. Market Timing (time features with data augmentation)
#
# This setup demonstrates how to create sophisticated multimodal systems
# that can learn complex relationships across different data sources.

# =============================================================================
# MODALITY DEFINITIONS
# =============================================================================
modalities:
  # -------------------------------------------------------------------------
  # MODALITY 1: COMBINED STOCK PRICES
  # -------------------------------------------------------------------------
  # Combine multiple stock files to learn general price patterns
  # This demonstrates folder-based loading with sophisticated processing
  - modality_name: "Multi-Stock Prices"
    path: "./examples/sample_data/advanced_multimodal/"  # Folder containing multiple files
    column_number: 13  # Close price column across all files
    has_header: true
    processing_steps:
      # First scale prices to consistent range
      - function: range_numeric_data
        args:
          num_whole_digits: 3
          decimal_places: 2
        enabled: true
    cross_attention: true  # Primary modality - attends to all others
    randomness_size: 2     # Add randomness during training for data augmentation

  # -------------------------------------------------------------------------
  # MODALITY 2: VOLATILITY INDICATORS
  # -------------------------------------------------------------------------
  # Advanced volatility analysis using percentage changes and intelligent binning
  - modality_name: "Volatility Patterns"
    path: "./examples/sample_data/advanced_multimodal/"
    column_number: 13  # Same price data, different processing pipeline
    has_header: true
    processing_steps:
      # Step 1: Convert to percentage changes
      - function: convert_to_percent_changes
        args:
          decimal_places: 3  # High precision for volatility analysis
        enabled: true
      # Step 2: Sophisticated binning with outlier handling
      - function: bin_numeric_data
        args:
          num_bins: 8           # More granular volatility categories
          outlier_percentile: 0.05  # Aggressive outlier capping
          exponent: 1.5         # Non-linear binning for better distribution
        enabled: true
    cross_attention: true   # Volatility should attend to prices and volume
    randomness_size: null   # No randomness - volatility patterns are precise

  # -------------------------------------------------------------------------
  # MODALITY 3: VOLUME PATTERNS
  # -------------------------------------------------------------------------
  # Trading volume analysis with scaling and categorization
  - modality_name: "Trading Volume"
    path: "./examples/sample_data/advanced_multimodal/"
    column_number: 14  # Volume column
    has_header: true
    processing_steps:
      # Step 1: Scale volume numbers to manageable range
      - function: range_numeric_data
        args:
          num_whole_digits: 2
          decimal_places: 0   # Volumes don't need decimal precision
        enabled: true
      # Step 2: Bin scaled volumes into activity categories
      - function: bin_numeric_data
        args:
          num_bins: 6
          outlier_percentile: 0.1
        enabled: true
    cross_attention: false  # Volume patterns are relatively independent
    randomness_size: 1      # Light randomness for volume data augmentation

  # -------------------------------------------------------------------------
  # MODALITY 4: ENHANCED MARKET TIMING
  # -------------------------------------------------------------------------
  # Advanced time-based features with data augmentation
  - modality_name: "Market Timing"
    path: "./examples/sample_data/advanced_multimodal/"
    column_number: 6   # Hour column
    has_header: true
    processing_steps: []  # Keep raw hour values for interpretability
    cross_attention: false  # Time is an independent feature
    randomness_size: 3      # Maximum randomness for robust time pattern learning

# =============================================================================
# ADVANCED CONFIGURATION NOTES
# =============================================================================
#
# Key advanced concepts demonstrated:
#
# 1. FOLDER-BASED MULTIMODAL LOADING:
#    - All modalities load from the same folder containing multiple stock files
#    - Data is concatenated while preserving file boundaries
#    - Creates larger, more diverse datasets for each modality
#    - Better generalization across different stocks/securities
#
# 2. SOPHISTICATED PROCESSING PIPELINES:
#    - Multi-step processing chains (e.g., percentages -> binning)
#    - Fine-tuned parameters for optimal data representation
#    - Different processing strategies for different data types
#
# 3. STRATEGIC CROSS-ATTENTION DESIGN:
#    - Stock Prices: Attends to all (primary pattern recognition)
#    - Volatility: Attends to all (needs price and volume context)
#    - Volume: Independent (volume patterns are self-contained)
#    - Timing: Independent (time doesn't depend on other modalities)
#
# 4. DATA AUGMENTATION STRATEGY:
#    - Stock Prices: Medium randomness (maintains price integrity)
#    - Volatility: No randomness (precise volatility calculations)
#    - Volume: Light randomness (some volume uncertainty is realistic)
#    - Timing: Maximum randomness (robust time pattern learning)
#
# 5. FILE-BASED VALIDATION:
#    - Last file (GOOGL) reserved for validation
#    - Tests model's ability to generalize to unseen stocks
#    - More realistic evaluation than random splitting
#
# 6. SCALABILITY FEATURES:
#    - Larger model architecture for complex pattern learning
#    - Higher precision processing for nuanced financial data
#    - GPU optimization for faster training
#
# This configuration demonstrates production-ready multimodal financial
# modeling with sophisticated feature engineering and validation strategies.
# Perfect for understanding advanced multimodal transformer capabilities!